name: Build dependencies and push base Docker Image to dockerhub (test new version)

on:
  push:
    branches:
    - 32-vt-tv-improve-ci

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    # Temporary test using matrix for validation then will become workflow dispatch
    strategy:
      matrix:
        # test token will be removed after the tests to use secrets again
        BUILD_CONFIG: [ubuntu_22.04-gcc_11-vtk_9.2.2-py_38, ubuntu_22.04-clang_14-vtk_9.2.2-py_38]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Extract build configuration
        run: |
          IFS='_-' read -r -a CONFIG <<< "${{ matrix.BUILD_CONFIG }}"
          echo "BASE_IMAGE=${CONFIG[0]}:${CONFIG[1]}" >> $GITHUB_ENV
          echo "CC=${CONFIG[2]}" >> $GITHUB_ENV
          if [[ "${CONFIG[2]}" == "gcc" ]]; then
            echo "CXX=g++-${CONFIG[3]}" >> $GITHUB_ENV
          elif [[ "${CONFIG[2]}" == "clang" ]]; then
            echo "CXX=clang++-${CONFIG[3]}" >> $GITHUB_ENV
          else
            exit 1
          fi
          echo "VTK_TAG=${CONFIG[5]}" >> $GITHUB_ENV
          echo "PYTHON=${CONFIG[7]}" >> $GITHUB_ENV
          echo "IMAGE_NAME=master" >> $GITHUB_ENV
          echo "IMAGE_TAG=master-$BUILD_CONFIG" >> $GITHUB_ENV

      - name: Build configuration
        run: |
          echo "Base image: $BASE_IMAGE"
          echo "C Compiler: $CC"
          echo "CXX Compiler: $CXX"
          echo "VTK Tag: $VTK_TAG"
          echo "Python: $PYTHON"
          echo "Docker image: $IMAGE_NAME:$IMAGE_TAG"

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: pierrpebay/vt-tv

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          build-args: BASE=${{ env.BASE_IMAGE }},CC=${{ env.CC }},CXX=${{ env.CXX }},VTK_TAG=${{ env.VTK_TAG }},PYTHON=${{ env.PYTHON }}
          file: ci/docker/make-base.dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
